<?xml version="1.0" encoding="utf-8"?><testsuites><testsuite name="pytest" errors="0" failures="1" skipped="2" tests="6" time="0.156" timestamp="2024-05-03T16:24:49.706593" hostname="DESKTOP-TIC5DM4"><testcase classname="test_calc" name="test_add[10-5-15]" time="0.001" /><testcase classname="test_calc" name="test_add[1-1-3]" time="0.001"><failure message="AssertionError: Error while doing add&#10;assert 2 == 3">num1 = 1, num2 = 1, expected_result = 3

    @pytest.mark.parametrize("num1, num2, expected_result",
                             [
                                 (10, 5, 15),
                                 (1, 1, 3)  # this is for fail in cmd terminal pytest --maxfaill=1
                                            # it will run till one test case fails
                             ])
    def test_add(num1, num2, expected_result):
        actual_result = add(num1, num2)
&gt;       assert actual_result == expected_result, 'Error while doing add'
E       AssertionError: Error while doing add
E       assert 2 == 3

test_calc.py:14: AssertionError</failure></testcase><testcase classname="test_calc" name="test_add_two_positive" time="0.001" /><testcase classname="test_calc" name="test_add_two_negative" time="0.001" /><testcase classname="test_calc" name="test_add_one_positive_one_negative" time="0.001"><skipped type="pytest.skip" message="Skipping test">C:\Users\Administrator\Desktop\Python Atomotive testing\ClassWork\pythonLearning\Test_commandLine\test_calc.py:31: Skipping test</skipped></testcase><testcase classname="test_calc" name="test_expected_to_fail" time="0.001"><skipped type="pytest.xfail" message="It is expected to fail" /></testcase></testsuite></testsuites>